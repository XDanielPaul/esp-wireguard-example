name: "ESP-IDF build to releases (push)"

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/build-artifact.yml'
      - '.github/workflows/build-artifact-on-push.yml'

# on:
#   workflow_dispatch:
#     inputs:
#       path:
#         description: "Relative path under $GITHUB_WORKSPACE to place the repository"
#         default: ""
#         required: false
#       esp_idf_version:
#         description: "Tag of ESP-IDF docker image to use"
#         default: "release-v4.4"
#         required: true
#       target:
#         description: "ESP32 variant to build for"
#         default: "esp32"
#         required: true
#       command:
#         description: "Command to run inside the docker container (default: builds the project)"
#         default: "idf.py build"
#         required: true
#       sdkconfig_defaults:
#         description: "Sdkconfig default settings"
#         default: ""
#         required: false

jobs:
  build-and-upload-binaries:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # - name: Use sdkconfig.defaults
      #   if: github.event_name == 'workflow_dispatch' && github.event.inputs.sdkconfig_defaults != ''
      #   run: echo "${{ inputs.sdkconfig_defaults }}" >> sdkconfig.defaults

      - name: ESP-IDF build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: release-v4.4
          target: esp32
          # esp_idf_version: ${{ inputs.esp_idf_version }}
          # target: ${{ inputs.target }}
          # path: ${{ inputs.path }}
          command: |
            idf.py build
            cd build
            esptool.py --chip esp32 merge_bin -o merged-flash.bin @flash_args
            cd ..

      # - name: Find examples path
      #   run: echo "example_paths=$(find "examples" -name "CMakeLists.txt" ! -path "*/main/*" -printf "%h\n")" >> $GITHUB_ENV
      
      # - run: cd build

      # - name: Megre binary files
      #   run: esptool.py --chip ${{ inputs.target }} merge_bin -o merged-flash.bin @flash_args
        
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: build/merged-flash.bin

      # - name: Create artifact name
      #   run: echo "artifact_name=${{ inputs.target }}-binaries" >> $GITHUB_ENV

      #- name: Upload binaries as artifacts
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: "${{ env.artifact_name }}"
      #    path: merged-flash.bin

      - run: echo "tag_name=$(date +%s)" >> $GITHUB_ENV
          

      # - uses: avakar/tag-and-release@v1
      #   with:
      #     tag_name: ${{ env.tag_name }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/merged-flash.bin
          tag: ${{ env.tag_name }}
          #release_name: "Timestamp: ${{ env.tag_name }}"
          overwrite: true